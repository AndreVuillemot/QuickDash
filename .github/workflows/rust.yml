name: Rust

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  PROJECT_NAME_UNDERSCORE: quick_dash
jobs:
  test:
    name: 'test'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [stable, macos, win-msvc, win-gnu]
        include:
        - build: stable
          os: ubuntu-latest
          rust: stable
        - build: macos
          os: macos-latest
          rust: stable
        - build: win-msvc
          os: windows-latest
          rust: stable
        - build: win-gnu
          os: windows-latest
          rust: stable-x86_64-gnu
    steps:
    - name: 'Checkout repository'
      uses: actions/checkout@v2.3.4
      with:
        fetch-depth: 1
        
    - name: 'Install Rust'
      uses: actions-rs/toolchain@v1.0.6
      with:
        toolchain: ${{ matrix.rust }}
        override: true
        profile: default
        
    - name: 'Clippy'
      uses: actions-rs/cargo@v1
      with:
        command: clippy
        args: -- -D warnings
        
    - name: 'Build Release'
      run: cargo build --release
      
    - name: 'Tar files'
      run: tar -cvf build.tar target/release/${{ env.PROJECT_NAME_UNDERSCORE }}
      
    - name: 'Upload Artifact'
      uses: actions/upload-artifact@v2.2.4
      with:
        name: ${{ env.PROJECT_NAME_UNDERSCORE }}
        path: target/release/${{ env.PROJECT_NAME_UNDERSCORE }}
